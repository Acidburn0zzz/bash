#!/bin/bash

################################################################################
#                                   INIT                                       #
################################################################################
RPMEASY=$HOME/git/bash/rpm-scripts/rpmeasy-functions.sh
if [ -f "$RPMEASY" ]; then
        . "$RPMEASY"
fi

#firefox-trunk(mozilla-central), firefox-dev (mozilla-aurora)
prepare_env "firefox-dev" \
            "$HOME/git/bash/rpm-scripts/firefox/firefox-dev-skel" \
            "$HOME/git/localrepo"

# move old rpm, tar.bz2 in old folder
mv $DEST/firefox*.{tar.bz2,rpm} $DEST/old 2> /dev/null

################################################################################
#                                   DOWNLOAD                                   #
################################################################################
# TODO: changed branch based on PKG_NAME
BRANCH=mozilla-aurora
#BRANCH=mozilla-central

VERSION=`curl mxr.mozilla.org/$BRANCH/source/browser/config/version.txt?raw=1\.en-US.linux-x86_64.tar.bz2 -s`
#echo "Version: $VERSION"

URL=https://ftp.mozilla.org/pub/mozilla.org/firefox/nightly/latest-$BRANCH/firefox-$VERSION.en-US.linux-x86_64.tar.bz2

# download only if there isn't a firefox tar.bz2 package as parameter
if [[ "$1" = *firefox*.tar.bz2 ]]; then
    FILE="$1"  #FIXME: doesn't work with relative path
else
    echo "Downloading: $URL"
    curl $URL -O -#
    FILE=`ls *.tar.bz2`
fi

################################################################################
#                                   SKELETON                                   #
################################################################################
# copy rpm skeleton to $TEMP
cp -rf $SKEL .
# extract the tar.bz2 then move inside the skeleton
tar xf $FILE -C .

# fix all the things
rm -rf firefox/browser/searchplugins
mv firefox $PKG_NAME-skel/usr/lib64/$PKG_NAME

# create default prefs
mkdir -p $PKG_NAME-skel/usr/lib64/$PKG_NAME/browser/defaults/preferences
echo -e -n "pref(\"app.update.auto\",                     false);
pref(\"app.update.enabled\",                  false);
pref(\"app.update.autoInstallEnabled\",       false);
pref(\"general.smoothScroll\",                true);
pref(\"intl.locale.matchOS\",                 true);
pref(\"toolkit.storage.synchronous\",         0);
pref(\"toolkit.networkmanager.disable\",      false);
pref(\"offline.autoDetect\",                  true);
pref(\"browser.backspace_action\",            2);
pref(\"browser.display.use_system_colors\",   true);
pref(\"browser.download.folderList\",         1);
pref(\"browser.link.open_external\",          3);
pref(\"browser.shell.checkDefaultBrowser\",   false);
pref(\"network.manage-offline-status\",       true);
pref(\"dom.ipc.plugins.enabled.nswrapper*\",  false);
pref(\"extensions.shownSelectionUI\",         true);
pref(\"gfx.color_management.enablev4\",       true);
pref(\"ui.SpellCheckerUnderlineStyle\",       1);
pref(\"startup.homepage_override_url\",       \"\");
pref(\"browser.startup.homepage\",            \"data:text/plain,browser.startup.homepage=about:newtab\");
pref(\"browser.newtabpage.pinned\",           '[{\"url\":\"http://start.fedoraproject.org/\",\"title\":\"Fedora Project - Start Page\"}]');
" > $PKG_NAME-skel/usr/lib64/$PKG_NAME/browser/defaults/preferences/firefox-redhat-default-prefs.js

################################################################################
#                                   SPEC                                       #
################################################################################
# generate package info
echo "Summary: Safe and easy web browser from Mozilla
Vendor: Mozilla
Packager: fabiolbr
License: GPL v3
Group: Applications/Internet
URL: http://nightly.mozilla.org
Requires: mozilla-filesystem sqlite" > pkg.in

prepare_build

# fix conflicts
sed '/^%dir \/usr\/bin$/d' -i *files.txt
sed '/^%dir \/usr\/lib64$/d' -i *files.txt

################################################################################
#                                BUILD + INSTALL                               #
################################################################################
# build rpm
VERSION=`cat "$PKG_NAME"-skel/usr/lib64/$PKG_NAME/application.ini | grep Version | cut -d '=' -f 2 | tail -n 1`
RELEASE=`cat "$PKG_NAME"-skel/usr/lib64/$PKG_NAME/application.ini | grep BuildID | cut -d '=' -f 2`
#ARCH=`echo $FILE | cut -d '.' -f 3`
build_rpm $VERSION $RELEASE

# save the tar.bz2 #TODO: use the option inside rpmeasy-functions
cp $FILE $DEST/

install_rpm


