#!/bin/bash
#requirements: zenity, apktool, aapt

# more info on zenity http://help.gnome.org/users/zenity/

decode () {
    if [ -z "$apk" ]; then
        notify-send --icon="error"  "NOT APK"
    else
        echo -e "APK:$apk\n"
        cd "$output_fld"
        java -jar $apktool d -s "$apk"
  fi
}

compile () {
    cd $apkfolder && cd ..

    yml="$apkfolder/apktool.yml"
    echo $yml
    #check if apktool.yml is present(a little help to identify decoded folder)
    if  [ -e "$yml" ]; then
        java -jar $apktool b "$apkfolder"
    else 
        return 2 #not a decoded app
    fi
}

signApk () {
    java -jar $signapk $pub_key $priv_key "$apkfolder/dist/$apkname.apk" "$apkfolder/dist/$apkname-signed.apk"
}


output_fld=$HOME/android/apktool/
source_fld=$HOME/coding/bash/apktool-zenity
icon=$source_fld/apktool-zenity.svg
apktool=$source_fld/apktool.jar
signapk=$source_fld/signapk.jar
pub_key=$source_fld/testkey.x509.pem
priv_key=$source_fld/testkey.pk8

sdk=$HOME/coding/android/android-sdk-linux
aapt=$sdk/build-tools/`cd $sdk/build-tools && ls -1 | tail -1`
export PATH=${PATH}:$aapt

name="Apktool Zenity"

opt1="Build"
opt2="Decode"
if [[ "$1" == *.apk ]]; then
    op=$opt2
    apk=$1
else
    op=`zenity --name="$name" --height=150 --list --radiolist --title="apktool 1.52" \
    --text 'Select operation:' \--column '' --column 'Operation' \
    TRUE "$opt1" FALSE "$opt2"`
fi
echo -e "Chosen option: $op\n"

case "$op" in
    $opt1)
        apkfolder=`zenity --name="$name" --file-selection --directory --filename="$output_fld" --title="Select decompiled apk folder"`
        compile

        case $? in
        0)
            #apkname=`cat "$apkfolder"/apktool.yml | grep .apk | cut -d ":" -f 2| cut -d "." -f 1 | xargs` #xargs does the trim
            apkname=$(basename -s .apk `grep .apk "$apkfolder/apktool.yml" | cut -d ":" -f 2`)
            notify-send --icon="$icon" "APK BUILT: $apkname"
            signApk
            ;;
        2)
            notify-send --icon="error" "NOT A DECODED APK: $apkfolder"
            ;;
        *)
            notify-send --icon="error" "ERROR WHILE COMPILING: $apkfolder"
            ;;
        esac
        ;;
    $opt2)
        if [[ -z $apk ]]; then
            apk=`zenity --name="$name" --file-selection --title="Select file .apk" --file-filter='*.apk'`
        fi
        apkname=`basename -s -a $apk`
        decode $apk

        case $? in
        0)
            notify-send --icon="$icon" "DECODED: $apkname"
            ;;
        *)
            notify-send --icon="error" "ERROR WHILE DECODING: $apkname"
            rm -rf $apkfolder
        esac
        ;;
      *) 
      exit;
esac

rm -rf ~/apktool

exit
