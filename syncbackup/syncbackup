#!/bin/bash
#requirements:  rsync,  yum|apt,  figlet

echo "Sync Backup" | figlet

#######################################
#            INITALIZATION
#######################################

#go to source of scripts
SCRIPTS=$HOME/coding/bash/syncbackup
cd $SCRIPTS

# Source essential functions
if [ -f "functions.sh" ]; then
        . "functions.sh"
fi

#ubuntu or fedora?
if [ ! -z `which apt 2> /dev/null` ]; then        # probably using ubuntu\debian\mint
    MOUNT=/media
    PKGSYS=apt
elif [ ! -z `which yum 2> /dev/null` ]; then      # probably using fedora\redhat
    MOUNT=/run/media
    PKGSYS=yum
else
    exit 1
fi

#rsync missing?
if [ -z `which rsync 2> /dev/null` ]; then        # rsync not installed
        sudo $PKGSYS install rsync
fi

BACKUP="$MOUNT/$USERNAME/Backup"
MEDIA="/mnt/media"
WINDOWS="/mnt/win8"

#export variables
export SCRIPTS
export PKGSYS
export BACKUP
export MEDIA
export WINDOWS

#######################################
#               SCRIPTS
#######################################

while [[ ! $continue = "n" ]]; do

    echo -ne "\nSources to backup:
    MEDIA     1
    HOME      2
    SYSTEM    3
    WINDOWS   4
    ALL       5

    Choose: #"
    read script

    case "$script" in
        "1")
        printTitle "MEDIA"
        startScript "$MEDIA" "./000-media/000-media-start" "y"
        ;;
        "2")
        printTitle "HOME"
        startScript "$HOME" "./100-home/100-home-start" "y"
        ;;
        "3")
        printTitle "SYSTEM"
        startScript "/ (system)" "./200-system/200-system-start" "y"
        ;;
        "4")
        printTitle "WINDOWS"
        startScript "$WINDOWS" "./300-win/300-win-start" "y"
        ;;
        "5")
        printTitle "MEDIA" && startScript "$MEDIA" "./000-media/000-media-start" "y"
        printTitle "HOME" && startScript "$HOME" "./100-home/100-home-start" "y"
        printTitle "SYSTEM" && startScript "/ (system)" "./200-system/200-system-start" "y"
        printTitle "WINDOWS" && startScript "$WINDOWS" "./300-win/300-win-start" "y"
        ;;
        *)
        # no selection
        exit
    esac

    echo -ne "\n\n\nBackup something else? [y/n]: "
    read continue

done
